{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hamza\\\\Desktop\\\\todo-app\\\\client\\\\src\\\\components\\\\TodoInfo.js\",\n    _s = $RefreshSig$();\n\nimport MainContext from '../Context';\nimport { useContext } from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoInfo = () => {\n  _s();\n\n  const {\n    todos,\n    setTodos\n  } = useContext(MainContext);\n\n  const deleteAllTodos = async () => {\n    await todos.map(todo => {\n      axios.delete(config.apiUrl + todo._id).then(response => {\n        console.log(response.data);\n      }).catch(error => console.log(error));\n    });\n    await axios.get(config.apiUrl).then(response => setTodos(response.data.reverse())).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-info mt-3\",\n    children: todos.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [todos.filter(t => !t.completed).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"d-none d-sm-block\",\n        children: \"All tasks completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"d-none d-sm-block\",\n        children: [\"You have \", todos.filter(t => !t.completed).length, \" pending tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => deleteAllTodos(),\n        children: \"Clear All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoInfo, \"fKOALHXsjvZYuPAw/p5klSvGdqk=\");\n\n_c = TodoInfo;\nexport default TodoInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInfo\");","map":{"version":3,"sources":["C:/Users/Hamza/Desktop/todo-app/client/src/components/TodoInfo.js"],"names":["MainContext","useContext","axios","config","TodoInfo","todos","setTodos","deleteAllTodos","map","todo","delete","apiUrl","_id","then","response","console","log","data","catch","error","get","reverse","length","filter","t","completed"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,YAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBL,UAAU,CAACD,WAAD,CAAtC;;AAEA,QAAMO,cAAc,GAAG,YAAY;AACjC,UAAMF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;AACxBP,MAAAA,KAAK,CACFQ,MADH,CACUP,MAAM,CAACQ,MAAP,GAAgBF,IAAI,CAACG,GAD/B,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD,OAJH,EAKGC,KALH,CAKUC,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CALpB;AAMD,KAPK,CAAN;AAQA,UAAMjB,KAAK,CACRkB,GADG,CACCjB,MAAM,CAACQ,MADR,EAEHE,IAFG,CAEGC,QAAD,IAAcR,QAAQ,CAACQ,QAAQ,CAACG,IAAT,CAAcI,OAAd,EAAD,CAFxB,EAGHH,KAHG,CAGIC,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CAHd,CAAN;AAID,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,cACGd,KAAK,CAACiB,MAAN,GAAe,CAAf,gBACC;AAAA,iBACGjB,KAAK,CAACkB,MAAN,CAAcC,CAAD,IAAO,CAACA,CAAC,CAACC,SAAvB,EAAkCH,MAAlC,KAA6C,CAA7C,gBACC;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA,gCACYjB,KAAK,CAACkB,MAAN,CAAcC,CAAD,IAAO,CAACA,CAAC,CAACC,SAAvB,EAAkCH,MAD9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,MAAMf,cAAc,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,oBADD,GAaG;AAdN;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApCD;;GAAMH,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import MainContext from '../Context'\r\nimport { useContext } from 'react'\r\nimport axios from 'axios'\r\nimport config from '../config'\r\n\r\nconst TodoInfo = () => {\r\n  const { todos, setTodos } = useContext(MainContext)\r\n\r\n  const deleteAllTodos = async () => {\r\n    await todos.map((todo) => {\r\n      axios\r\n        .delete(config.apiUrl + todo._id)\r\n        .then((response) => {\r\n          console.log(response.data)\r\n        })\r\n        .catch((error) => console.log(error))\r\n    })\r\n    await axios\r\n      .get(config.apiUrl)\r\n      .then((response) => setTodos(response.data.reverse()))\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo-info mt-3\">\r\n      {todos.length > 0 ? (\r\n        <>\r\n          {todos.filter((t) => !t.completed).length === 0 ? (\r\n            <p className=\"d-none d-sm-block\">All tasks completed</p>\r\n          ) : (\r\n            <p className=\"d-none d-sm-block\">\r\n              You have {todos.filter((t) => !t.completed).length} pending tasks\r\n            </p>\r\n          )}\r\n          <button className=\"btn btn-danger\" onClick={() => deleteAllTodos()}>\r\n            Clear All\r\n          </button>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoInfo\r\n"]},"metadata":{},"sourceType":"module"}